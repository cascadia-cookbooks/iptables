# Chef generated file. Edits will be lost.

*filter
# zero-out the counters
# NOTE: useless but required metadata
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]

# accept any other packet thats related to a previously accepted packet
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

# accept anything from loopback
# NOTE: this is 127.0.0.1 or localhost
-A INPUT -i lo -j ACCEPT

# drop any packet that doesnt have a SYN bit and is a new packet
-A INPUT -p tcp ! --syn -m state --state NEW -j DROP

# drop any fragmented packets
# NOTE: this rule may be redundant or heavy handed as kernels already know how
#  to handle fragmented packets
-A INPUT -f -j DROP

# defend against 'Christmas Tree' packets
# NOTE: defense against port scanning
-A INPUT -p tcp --tcp-flags ALL ALL -j DROP

# drop NULL packets
# NOTE: defense against port scanning
-A INPUT -p tcp --tcp-flags ALL NONE -j DROP

# allow icmp packets, but rate limit them
# NOTE: defense against port scanning
-A INPUT -p icmp --icmp-type any -m limit --limit 30/sec -j ACCEPT

# custom rules via Chef attributes
<% node['iptables']['rules'].each do |rule| -%>
<%= rule %>
<% end %>

# log and then drop anything else
# NOTE: since we are dropping, not rejecting, anything not allowed will timeout
-A INPUT -m limit --limit 5/min -j LOG --log-prefix "iptables denied: " --log-uid --log-level 7
-A INPUT -j DROP

COMMIT
